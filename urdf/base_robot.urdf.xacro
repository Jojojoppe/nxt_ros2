<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="myfirst">
  <!-- Robot chassis dimensions -->
  <xacro:property name="base_width" value="0.113" />
  <xacro:property name="base_length" value="0.1" />
  <xacro:property name="base_height" value="0.048" />

  <!-- NXT motor dimensions -->
  <xacro:property name="motor_radius" value="0.0125" />
  <xacro:property name="motor_width" value="0.025" />

  <!-- Drive wheels motor names & positions -->
  <xacro:property name="drive_wheel_motor_r_name" value="wheel_motor_r" />
  <xacro:property name="drive_wheel_motor_l_name" value="wheel_motor_l" />
  <xacro:property name="wheel_motor_x_off" value="0" />
  <xacro:property name="wheel_motor_y_off" value="0.031" />
  <xacro:property name="wheel_motor_z_off" value="${(base_height/2)-motor_radius}" />

  <!-- Drive wheels names, positions & dimensions -->
  <xacro:property name="drive_wheel_r_name" value="wheel_r" />
  <xacro:property name="drive_wheel_l_name" value="wheel_l" />
  <xacro:property name="wheels_radius" value="0.022" />
  <xacro:property name="wheels_width" value="0.022" />
  <xacro:property name="wheels_x_off" value="0" />
  <xacro:property name="wheels_y_gap" value="${base_width / 2 + wheels_width / 2 + 0.001}" />
  <xacro:property name="wheels_z_off" value="-0.015" />

  <!-- Caster wheel position -->
  <xacro:property name="caster_wheel_x_off" value="${-base_length}" />
  <xacro:property name="caster_wheel_z_off" value="${wheels_z_off}" />
  <xacro:property name="caster_wheel_radius" value="${wheels_radius}" />

  <!-- Radar joint names -->
  <xacro:property name="radar_motor_name" value="radar_motor" />
  <xacro:property name="radar_name" value="radar" />

  <!-- Radar motor position -->
  <xacro:property name="radar_motor_x_off" value="-0.02" />
  <xacro:property name="radar_motor_y_off" value="0" />
  <xacro:property name="radar_motor_z_off" value="0.012" />

  <!-- Radar position & dimensions -->
  <xacro:property name="radar_x_off" value="0" />
  <xacro:property name="radar_y_off" value="0" />
  <xacro:property name="radar_z_off" value="0.05" />
  <xacro:property name="radar_length" value="0.05" />
  <xacro:property name="radar_width" value="0.05" />
  <xacro:property name="radar_height" value="0.03" />


  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Define material -->
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.513 0.0 1.0"/>
  </material>

  <!-- Robot's main chassis -->
  <link name="base_link">
    <visual>
      <origin xyz="${-base_length/2} 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin xyz="${-base_length/2} 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheels_radius-wheels_z_off)}" rpy="0 0 0"/>
  </joint>

  <!-- Motor with wheel macro -->
  <xacro:macro name="motor_and_wheel" params="motor_name motor_mimic_name y_reflect ">
    <!-- Motor -->
    <link name="${motor_name}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${motor_radius}" length="${motor_width}"/>
        </geometry>
        <material name="orange"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${motor_radius}" length="${motor_width}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${motor_name}" type="continuous">
      <parent link="base_link"/>
      <child link="${motor_name}_link"/>
      <origin xyz="${wheel_motor_x_off} ${y_reflect * wheel_motor_y_off} ${wheel_motor_z_off}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    <!-- Wheel -->
    <link name="${motor_mimic_name}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheels_radius}" length="${wheels_width}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheels_radius}" length="${wheels_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheels_radius}" h="${wheels_width}"/>
    </link>

    <joint name="${motor_mimic_name}" type="continuous">
      <parent link="base_link"/>
      <child link="${motor_mimic_name}_link"/>
      <origin xyz="${wheels_x_off} ${y_reflect * wheels_y_gap} ${wheels_z_off}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:motor_and_wheel motor_name="${drive_wheel_motor_r_name}" motor_mimic_name="${drive_wheel_r_name}" y_reflect="1" />
  <xacro:motor_and_wheel motor_name="${drive_wheel_motor_l_name}" motor_mimic_name="${drive_wheel_l_name}" y_reflect="-1" />

  <!-- Caster Wheel -->
  <link name="caster_wheel">
    <visual>
      <geometry>
        <sphere radius="${(caster_wheel_radius + caster_wheel_z_off - (base_height / 2))}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${(caster_wheel_radius + caster_wheel_z_off - (base_height / 2))}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.5" r="${(caster_wheel_radius + caster_wheel_z_off - (base_height / 2))}"/>
  </link>

  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin xyz="${caster_wheel_x_off} 0.0 ${-(base_height / 2)}" rpy="0 0 0"/>
  </joint>

  <!-- Radar -->
  <link name="${radar_motor_name}_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${motor_radius}" length="${motor_width}"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${motor_radius}" length="${motor_width}"/>
      </geometry>
    </collision>
    <xacro:cylinder_inertia m="0.5" r="${motor_radius}" h="${motor_width}"/>
  </link>

  <joint name="${radar_motor_name}" type="continuous">
    <parent link="base_link"/>
    <child link="${radar_motor_name}_link"/>
    <origin xyz="${radar_motor_x_off} ${radar_motor_y_off} ${base_height/2 + radar_height/2 + radar_motor_z_off}" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>


  <link name="${radar_name}_link">
    <visual>
      <origin xyz="${-radar_length / 2} 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${radar_length} ${radar_width} ${radar_height}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="${-radar_length / 2} 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${radar_length} ${radar_width} ${radar_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="0.5" w="${radar_width}" d="${radar_length}" h="${radar_height}"/>
  </link>

  <joint name="${radar_name}" type="continuous">
    <parent link="base_link"/>
    <child link="${radar_name}_link"/>
    <origin xyz="${radar_x_off} ${radar_y_off} ${base_height/2 + radar_height/2 + radar_z_off}" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>
</robot>